// Generated from /Users/nrupp/classes/popl/popl-python-parser/python.g4 by ANTLR 4.13.1
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class pythonLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		AND=1, OR=2, NOT=3, EQUAL=4, PLUSEQUAL=5, MINUSEQUAL=6, MULTIPLYEQUAL=7, 
		DIVIDEEQUAL=8, PLUS=9, MINUS=10, MULTIPLY=11, DIVIDE=12, MOD=13, COMMA=14, 
		LBRACKET=15, RBRACKET=16, LPAREN=17, RPAREN=18, INT=19, FLOAT=20, STRING=21, 
		BOOLEAN=22, TAB=23, WHITESPACE=24, NEWLINE=25, IF=26, ELSE=27, ELIF=28, 
		COLON=29, GREATERTHAN=30, LESSTHAN=31, EQUALTO=32, NOTEQUALTO=33, GREATERTHANEQUAL=34, 
		LESSTHANEQUAL=35, VARNAME=36;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"AND", "OR", "NOT", "EQUAL", "PLUSEQUAL", "MINUSEQUAL", "MULTIPLYEQUAL", 
			"DIVIDEEQUAL", "PLUS", "MINUS", "MULTIPLY", "DIVIDE", "MOD", "COMMA", 
			"LBRACKET", "RBRACKET", "LPAREN", "RPAREN", "INT", "FLOAT", "STRING", 
			"BOOLEAN", "TAB", "WHITESPACE", "NEWLINE", "IF", "ELSE", "ELIF", "COLON", 
			"GREATERTHAN", "LESSTHAN", "EQUALTO", "NOTEQUALTO", "GREATERTHANEQUAL", 
			"LESSTHANEQUAL", "VARNAME"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'and'", "'or'", "'not'", "'='", "'+='", "'-='", "'*='", "'/='", 
			"'+'", "'-'", "'*'", "'/'", "'%'", "','", "'['", "']'", "'('", "')'", 
			null, null, null, null, null, null, null, "'if'", "'else'", "'elif'", 
			"':'", "'>'", "'<'", "'=='", "'!='", "'>='", "'<='"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "AND", "OR", "NOT", "EQUAL", "PLUSEQUAL", "MINUSEQUAL", "MULTIPLYEQUAL", 
			"DIVIDEEQUAL", "PLUS", "MINUS", "MULTIPLY", "DIVIDE", "MOD", "COMMA", 
			"LBRACKET", "RBRACKET", "LPAREN", "RPAREN", "INT", "FLOAT", "STRING", 
			"BOOLEAN", "TAB", "WHITESPACE", "NEWLINE", "IF", "ELSE", "ELIF", "COLON", 
			"GREATERTHAN", "LESSTHAN", "EQUALTO", "NOTEQUALTO", "GREATERTHANEQUAL", 
			"LESSTHANEQUAL", "VARNAME"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public pythonLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "python.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000$\u00e8\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002\u0001"+
		"\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002\u0004"+
		"\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002\u0007"+
		"\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002\u000b"+
		"\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e\u0002"+
		"\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011\u0002"+
		"\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014\u0002"+
		"\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017\u0002"+
		"\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a\u0002"+
		"\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002\u001d\u0007\u001d\u0002"+
		"\u001e\u0007\u001e\u0002\u001f\u0007\u001f\u0002 \u0007 \u0002!\u0007"+
		"!\u0002\"\u0007\"\u0002#\u0007#\u0001\u0000\u0001\u0000\u0001\u0000\u0001"+
		"\u0000\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0002\u0001\u0002\u0001"+
		"\u0002\u0001\u0002\u0001\u0003\u0001\u0003\u0001\u0004\u0001\u0004\u0001"+
		"\u0004\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0006\u0001\u0006\u0001"+
		"\u0006\u0001\u0007\u0001\u0007\u0001\u0007\u0001\b\u0001\b\u0001\t\u0001"+
		"\t\u0001\n\u0001\n\u0001\u000b\u0001\u000b\u0001\f\u0001\f\u0001\r\u0001"+
		"\r\u0001\u000e\u0001\u000e\u0001\u000f\u0001\u000f\u0001\u0010\u0001\u0010"+
		"\u0001\u0011\u0001\u0011\u0001\u0012\u0004\u0012x\b\u0012\u000b\u0012"+
		"\f\u0012y\u0001\u0013\u0005\u0013}\b\u0013\n\u0013\f\u0013\u0080\t\u0013"+
		"\u0001\u0013\u0001\u0013\u0004\u0013\u0084\b\u0013\u000b\u0013\f\u0013"+
		"\u0085\u0001\u0013\u0004\u0013\u0089\b\u0013\u000b\u0013\f\u0013\u008a"+
		"\u0001\u0013\u0001\u0013\u0005\u0013\u008f\b\u0013\n\u0013\f\u0013\u0092"+
		"\t\u0013\u0003\u0013\u0094\b\u0013\u0001\u0014\u0001\u0014\u0005\u0014"+
		"\u0098\b\u0014\n\u0014\f\u0014\u009b\t\u0014\u0001\u0014\u0001\u0014\u0001"+
		"\u0014\u0005\u0014\u00a0\b\u0014\n\u0014\f\u0014\u00a3\t\u0014\u0001\u0014"+
		"\u0003\u0014\u00a6\b\u0014\u0001\u0015\u0001\u0015\u0001\u0015\u0001\u0015"+
		"\u0001\u0015\u0001\u0015\u0001\u0015\u0001\u0015\u0001\u0015\u0003\u0015"+
		"\u00b1\b\u0015\u0001\u0016\u0001\u0016\u0001\u0016\u0001\u0016\u0001\u0016"+
		"\u0003\u0016\u00b8\b\u0016\u0001\u0017\u0004\u0017\u00bb\b\u0017\u000b"+
		"\u0017\f\u0017\u00bc\u0001\u0017\u0001\u0017\u0001\u0018\u0001\u0018\u0001"+
		"\u0019\u0001\u0019\u0001\u0019\u0001\u001a\u0001\u001a\u0001\u001a\u0001"+
		"\u001a\u0001\u001a\u0001\u001b\u0001\u001b\u0001\u001b\u0001\u001b\u0001"+
		"\u001b\u0001\u001c\u0001\u001c\u0001\u001d\u0001\u001d\u0001\u001e\u0001"+
		"\u001e\u0001\u001f\u0001\u001f\u0001\u001f\u0001 \u0001 \u0001 \u0001"+
		"!\u0001!\u0001!\u0001\"\u0001\"\u0001\"\u0001#\u0001#\u0005#\u00e4\b#"+
		"\n#\f#\u00e7\t#\u0000\u0000$\u0001\u0001\u0003\u0002\u0005\u0003\u0007"+
		"\u0004\t\u0005\u000b\u0006\r\u0007\u000f\b\u0011\t\u0013\n\u0015\u000b"+
		"\u0017\f\u0019\r\u001b\u000e\u001d\u000f\u001f\u0010!\u0011#\u0012%\u0013"+
		"\'\u0014)\u0015+\u0016-\u0017/\u00181\u00193\u001a5\u001b7\u001c9\u001d"+
		";\u001e=\u001f? A!C\"E#G$\u0001\u0000\b\u0001\u000009\u0001\u0000\"\""+
		"\u0001\u0000\'\'\u0001\u0000\t\t\u0002\u0000\r\r  \u0001\u0000\n\n\u0003"+
		"\u0000AZ__az\u0004\u000009AZ__az\u00f4\u0000\u0001\u0001\u0000\u0000\u0000"+
		"\u0000\u0003\u0001\u0000\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0000"+
		"\u0000\u0007\u0001\u0000\u0000\u0000\u0000\t\u0001\u0000\u0000\u0000\u0000"+
		"\u000b\u0001\u0000\u0000\u0000\u0000\r\u0001\u0000\u0000\u0000\u0000\u000f"+
		"\u0001\u0000\u0000\u0000\u0000\u0011\u0001\u0000\u0000\u0000\u0000\u0013"+
		"\u0001\u0000\u0000\u0000\u0000\u0015\u0001\u0000\u0000\u0000\u0000\u0017"+
		"\u0001\u0000\u0000\u0000\u0000\u0019\u0001\u0000\u0000\u0000\u0000\u001b"+
		"\u0001\u0000\u0000\u0000\u0000\u001d\u0001\u0000\u0000\u0000\u0000\u001f"+
		"\u0001\u0000\u0000\u0000\u0000!\u0001\u0000\u0000\u0000\u0000#\u0001\u0000"+
		"\u0000\u0000\u0000%\u0001\u0000\u0000\u0000\u0000\'\u0001\u0000\u0000"+
		"\u0000\u0000)\u0001\u0000\u0000\u0000\u0000+\u0001\u0000\u0000\u0000\u0000"+
		"-\u0001\u0000\u0000\u0000\u0000/\u0001\u0000\u0000\u0000\u00001\u0001"+
		"\u0000\u0000\u0000\u00003\u0001\u0000\u0000\u0000\u00005\u0001\u0000\u0000"+
		"\u0000\u00007\u0001\u0000\u0000\u0000\u00009\u0001\u0000\u0000\u0000\u0000"+
		";\u0001\u0000\u0000\u0000\u0000=\u0001\u0000\u0000\u0000\u0000?\u0001"+
		"\u0000\u0000\u0000\u0000A\u0001\u0000\u0000\u0000\u0000C\u0001\u0000\u0000"+
		"\u0000\u0000E\u0001\u0000\u0000\u0000\u0000G\u0001\u0000\u0000\u0000\u0001"+
		"I\u0001\u0000\u0000\u0000\u0003M\u0001\u0000\u0000\u0000\u0005P\u0001"+
		"\u0000\u0000\u0000\u0007T\u0001\u0000\u0000\u0000\tV\u0001\u0000\u0000"+
		"\u0000\u000bY\u0001\u0000\u0000\u0000\r\\\u0001\u0000\u0000\u0000\u000f"+
		"_\u0001\u0000\u0000\u0000\u0011b\u0001\u0000\u0000\u0000\u0013d\u0001"+
		"\u0000\u0000\u0000\u0015f\u0001\u0000\u0000\u0000\u0017h\u0001\u0000\u0000"+
		"\u0000\u0019j\u0001\u0000\u0000\u0000\u001bl\u0001\u0000\u0000\u0000\u001d"+
		"n\u0001\u0000\u0000\u0000\u001fp\u0001\u0000\u0000\u0000!r\u0001\u0000"+
		"\u0000\u0000#t\u0001\u0000\u0000\u0000%w\u0001\u0000\u0000\u0000\'\u0093"+
		"\u0001\u0000\u0000\u0000)\u00a5\u0001\u0000\u0000\u0000+\u00b0\u0001\u0000"+
		"\u0000\u0000-\u00b7\u0001\u0000\u0000\u0000/\u00ba\u0001\u0000\u0000\u0000"+
		"1\u00c0\u0001\u0000\u0000\u00003\u00c2\u0001\u0000\u0000\u00005\u00c5"+
		"\u0001\u0000\u0000\u00007\u00ca\u0001\u0000\u0000\u00009\u00cf\u0001\u0000"+
		"\u0000\u0000;\u00d1\u0001\u0000\u0000\u0000=\u00d3\u0001\u0000\u0000\u0000"+
		"?\u00d5\u0001\u0000\u0000\u0000A\u00d8\u0001\u0000\u0000\u0000C\u00db"+
		"\u0001\u0000\u0000\u0000E\u00de\u0001\u0000\u0000\u0000G\u00e1\u0001\u0000"+
		"\u0000\u0000IJ\u0005a\u0000\u0000JK\u0005n\u0000\u0000KL\u0005d\u0000"+
		"\u0000L\u0002\u0001\u0000\u0000\u0000MN\u0005o\u0000\u0000NO\u0005r\u0000"+
		"\u0000O\u0004\u0001\u0000\u0000\u0000PQ\u0005n\u0000\u0000QR\u0005o\u0000"+
		"\u0000RS\u0005t\u0000\u0000S\u0006\u0001\u0000\u0000\u0000TU\u0005=\u0000"+
		"\u0000U\b\u0001\u0000\u0000\u0000VW\u0005+\u0000\u0000WX\u0005=\u0000"+
		"\u0000X\n\u0001\u0000\u0000\u0000YZ\u0005-\u0000\u0000Z[\u0005=\u0000"+
		"\u0000[\f\u0001\u0000\u0000\u0000\\]\u0005*\u0000\u0000]^\u0005=\u0000"+
		"\u0000^\u000e\u0001\u0000\u0000\u0000_`\u0005/\u0000\u0000`a\u0005=\u0000"+
		"\u0000a\u0010\u0001\u0000\u0000\u0000bc\u0005+\u0000\u0000c\u0012\u0001"+
		"\u0000\u0000\u0000de\u0005-\u0000\u0000e\u0014\u0001\u0000\u0000\u0000"+
		"fg\u0005*\u0000\u0000g\u0016\u0001\u0000\u0000\u0000hi\u0005/\u0000\u0000"+
		"i\u0018\u0001\u0000\u0000\u0000jk\u0005%\u0000\u0000k\u001a\u0001\u0000"+
		"\u0000\u0000lm\u0005,\u0000\u0000m\u001c\u0001\u0000\u0000\u0000no\u0005"+
		"[\u0000\u0000o\u001e\u0001\u0000\u0000\u0000pq\u0005]\u0000\u0000q \u0001"+
		"\u0000\u0000\u0000rs\u0005(\u0000\u0000s\"\u0001\u0000\u0000\u0000tu\u0005"+
		")\u0000\u0000u$\u0001\u0000\u0000\u0000vx\u0007\u0000\u0000\u0000wv\u0001"+
		"\u0000\u0000\u0000xy\u0001\u0000\u0000\u0000yw\u0001\u0000\u0000\u0000"+
		"yz\u0001\u0000\u0000\u0000z&\u0001\u0000\u0000\u0000{}\u0007\u0000\u0000"+
		"\u0000|{\u0001\u0000\u0000\u0000}\u0080\u0001\u0000\u0000\u0000~|\u0001"+
		"\u0000\u0000\u0000~\u007f\u0001\u0000\u0000\u0000\u007f\u0081\u0001\u0000"+
		"\u0000\u0000\u0080~\u0001\u0000\u0000\u0000\u0081\u0083\u0005.\u0000\u0000"+
		"\u0082\u0084\u0007\u0000\u0000\u0000\u0083\u0082\u0001\u0000\u0000\u0000"+
		"\u0084\u0085\u0001\u0000\u0000\u0000\u0085\u0083\u0001\u0000\u0000\u0000"+
		"\u0085\u0086\u0001\u0000\u0000\u0000\u0086\u0094\u0001\u0000\u0000\u0000"+
		"\u0087\u0089\u0007\u0000\u0000\u0000\u0088\u0087\u0001\u0000\u0000\u0000"+
		"\u0089\u008a\u0001\u0000\u0000\u0000\u008a\u0088\u0001\u0000\u0000\u0000"+
		"\u008a\u008b\u0001\u0000\u0000\u0000\u008b\u008c\u0001\u0000\u0000\u0000"+
		"\u008c\u0090\u0005.\u0000\u0000\u008d\u008f\u0007\u0000\u0000\u0000\u008e"+
		"\u008d\u0001\u0000\u0000\u0000\u008f\u0092\u0001\u0000\u0000\u0000\u0090"+
		"\u008e\u0001\u0000\u0000\u0000\u0090\u0091\u0001\u0000\u0000\u0000\u0091"+
		"\u0094\u0001\u0000\u0000\u0000\u0092\u0090\u0001\u0000\u0000\u0000\u0093"+
		"~\u0001\u0000\u0000\u0000\u0093\u0088\u0001\u0000\u0000\u0000\u0094(\u0001"+
		"\u0000\u0000\u0000\u0095\u0099\u0005\"\u0000\u0000\u0096\u0098\b\u0001"+
		"\u0000\u0000\u0097\u0096\u0001\u0000\u0000\u0000\u0098\u009b\u0001\u0000"+
		"\u0000\u0000\u0099\u0097\u0001\u0000\u0000\u0000\u0099\u009a\u0001\u0000"+
		"\u0000\u0000\u009a\u009c\u0001\u0000\u0000\u0000\u009b\u0099\u0001\u0000"+
		"\u0000\u0000\u009c\u00a6\u0005\"\u0000\u0000\u009d\u00a1\u0005\'\u0000"+
		"\u0000\u009e\u00a0\b\u0002\u0000\u0000\u009f\u009e\u0001\u0000\u0000\u0000"+
		"\u00a0\u00a3\u0001\u0000\u0000\u0000\u00a1\u009f\u0001\u0000\u0000\u0000"+
		"\u00a1\u00a2\u0001\u0000\u0000\u0000\u00a2\u00a4\u0001\u0000\u0000\u0000"+
		"\u00a3\u00a1\u0001\u0000\u0000\u0000\u00a4\u00a6\u0005\'\u0000\u0000\u00a5"+
		"\u0095\u0001\u0000\u0000\u0000\u00a5\u009d\u0001\u0000\u0000\u0000\u00a6"+
		"*\u0001\u0000\u0000\u0000\u00a7\u00a8\u0005T\u0000\u0000\u00a8\u00a9\u0005"+
		"r\u0000\u0000\u00a9\u00aa\u0005u\u0000\u0000\u00aa\u00b1\u0005e\u0000"+
		"\u0000\u00ab\u00ac\u0005F\u0000\u0000\u00ac\u00ad\u0005a\u0000\u0000\u00ad"+
		"\u00ae\u0005l\u0000\u0000\u00ae\u00af\u0005s\u0000\u0000\u00af\u00b1\u0005"+
		"e\u0000\u0000\u00b0\u00a7\u0001\u0000\u0000\u0000\u00b0\u00ab\u0001\u0000"+
		"\u0000\u0000\u00b1,\u0001\u0000\u0000\u0000\u00b2\u00b8\u0007\u0003\u0000"+
		"\u0000\u00b3\u00b4\u0005 \u0000\u0000\u00b4\u00b5\u0005 \u0000\u0000\u00b5"+
		"\u00b6\u0005 \u0000\u0000\u00b6\u00b8\u0005 \u0000\u0000\u00b7\u00b2\u0001"+
		"\u0000\u0000\u0000\u00b7\u00b3\u0001\u0000\u0000\u0000\u00b8.\u0001\u0000"+
		"\u0000\u0000\u00b9\u00bb\u0007\u0004\u0000\u0000\u00ba\u00b9\u0001\u0000"+
		"\u0000\u0000\u00bb\u00bc\u0001\u0000\u0000\u0000\u00bc\u00ba\u0001\u0000"+
		"\u0000\u0000\u00bc\u00bd\u0001\u0000\u0000\u0000\u00bd\u00be\u0001\u0000"+
		"\u0000\u0000\u00be\u00bf\u0006\u0017\u0000\u0000\u00bf0\u0001\u0000\u0000"+
		"\u0000\u00c0\u00c1\u0007\u0005\u0000\u0000\u00c12\u0001\u0000\u0000\u0000"+
		"\u00c2\u00c3\u0005i\u0000\u0000\u00c3\u00c4\u0005f\u0000\u0000\u00c44"+
		"\u0001\u0000\u0000\u0000\u00c5\u00c6\u0005e\u0000\u0000\u00c6\u00c7\u0005"+
		"l\u0000\u0000\u00c7\u00c8\u0005s\u0000\u0000\u00c8\u00c9\u0005e\u0000"+
		"\u0000\u00c96\u0001\u0000\u0000\u0000\u00ca\u00cb\u0005e\u0000\u0000\u00cb"+
		"\u00cc\u0005l\u0000\u0000\u00cc\u00cd\u0005i\u0000\u0000\u00cd\u00ce\u0005"+
		"f\u0000\u0000\u00ce8\u0001\u0000\u0000\u0000\u00cf\u00d0\u0005:\u0000"+
		"\u0000\u00d0:\u0001\u0000\u0000\u0000\u00d1\u00d2\u0005>\u0000\u0000\u00d2"+
		"<\u0001\u0000\u0000\u0000\u00d3\u00d4\u0005<\u0000\u0000\u00d4>\u0001"+
		"\u0000\u0000\u0000\u00d5\u00d6\u0005=\u0000\u0000\u00d6\u00d7\u0005=\u0000"+
		"\u0000\u00d7@\u0001\u0000\u0000\u0000\u00d8\u00d9\u0005!\u0000\u0000\u00d9"+
		"\u00da\u0005=\u0000\u0000\u00daB\u0001\u0000\u0000\u0000\u00db\u00dc\u0005"+
		">\u0000\u0000\u00dc\u00dd\u0005=\u0000\u0000\u00ddD\u0001\u0000\u0000"+
		"\u0000\u00de\u00df\u0005<\u0000\u0000\u00df\u00e0\u0005=\u0000\u0000\u00e0"+
		"F\u0001\u0000\u0000\u0000\u00e1\u00e5\u0007\u0006\u0000\u0000\u00e2\u00e4"+
		"\u0007\u0007\u0000\u0000\u00e3\u00e2\u0001\u0000\u0000\u0000\u00e4\u00e7"+
		"\u0001\u0000\u0000\u0000\u00e5\u00e3\u0001\u0000\u0000\u0000\u00e5\u00e6"+
		"\u0001\u0000\u0000\u0000\u00e6H\u0001\u0000\u0000\u0000\u00e7\u00e5\u0001"+
		"\u0000\u0000\u0000\u000e\u0000y~\u0085\u008a\u0090\u0093\u0099\u00a1\u00a5"+
		"\u00b0\u00b7\u00bc\u00e5\u0001\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}